/* AUTO-GENERATED FILE. DO NOT MODIFY.
 * This class was automatically generated by the
 * static binding generator from the resources it found.
 * Please do not modify by hand.
 */
package com.tns.gen.co.fitcom.fancywebrtc;

public class FancyWebRTCListener implements co.fitcom.fancywebrtc.FancyWebRTCListener {
	public FancyWebRTCListener() {
		com.tns.Runtime.initInstance(this);
	}

	public void webRTCClientDidReceiveError(co.fitcom.fancywebrtc.FancyWebRTC param_0, java.lang.String param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientDidReceiveError", void.class, args);
	}

	public void webRTCClientStartCallWithSdp(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.SessionDescription param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientStartCallWithSdp", void.class, args);
	}

	public void webRTCClientDataChannelStateChanged(co.fitcom.fancywebrtc.FancyWebRTC param_0, java.lang.String param_1, org.webrtc.DataChannel.State param_2)  {
		java.lang.Object[] args = new java.lang.Object[3];
		args[0] = param_0;
		args[1] = param_1;
		args[2] = param_2;
		com.tns.Runtime.callJSMethod(this, "webRTCClientDataChannelStateChanged", void.class, args);
	}

	public void webRTCClientDataChannelMessageType(co.fitcom.fancywebrtc.FancyWebRTC param_0, java.lang.String param_1, java.lang.String param_2, co.fitcom.fancywebrtc.FancyWebRTC.DataChannelMessageType param_3)  {
		java.lang.Object[] args = new java.lang.Object[4];
		args[0] = param_0;
		args[1] = param_1;
		args[2] = param_2;
		args[3] = param_3;
		com.tns.Runtime.callJSMethod(this, "webRTCClientDataChannelMessageType", void.class, args);
	}

	public void webRTCClientOnRemoveStream(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.MediaStream param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnRemoveStream", void.class, args);
	}

	public void webRTCClientDidReceiveRemoteVideoTrackStream(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.VideoTrack param_1, org.webrtc.MediaStream param_2)  {
		java.lang.Object[] args = new java.lang.Object[3];
		args[0] = param_0;
		args[1] = param_1;
		args[2] = param_2;
		com.tns.Runtime.callJSMethod(this, "webRTCClientDidReceiveRemoteVideoTrackStream", void.class, args);
	}

	public void webRTCClientDidGenerateIceCandidate(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.IceCandidate param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientDidGenerateIceCandidate", void.class, args);
	}

	public void webRTCClientOnRenegotiationNeeded(co.fitcom.fancywebrtc.FancyWebRTC param_0)  {
		java.lang.Object[] args = new java.lang.Object[1];
		args[0] = param_0;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnRenegotiationNeeded", void.class, args);
	}

	public void webRTCClientOnIceCandidatesRemoved(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.IceCandidate[] param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnIceCandidatesRemoved", void.class, args);
	}

	public void webRTCClientOnIceConnectionChange(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.PeerConnection.IceConnectionState param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnIceConnectionChange", void.class, args);
	}

	public void webRTCClientOnIceConnectionReceivingChange(co.fitcom.fancywebrtc.FancyWebRTC param_0, boolean param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnIceConnectionReceivingChange", void.class, args);
	}

	public void webRTCClientOnIceGatheringChange(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.PeerConnection.IceGatheringState param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnIceGatheringChange", void.class, args);
	}

	public void webRTCClientOnSignalingChange(co.fitcom.fancywebrtc.FancyWebRTC param_0, org.webrtc.PeerConnection.SignalingState param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnSignalingChange", void.class, args);
	}

	public void webRTCClientOnCameraSwitchDone(co.fitcom.fancywebrtc.FancyWebRTC param_0, boolean param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnCameraSwitchDone", void.class, args);
	}

	public void webRTCClientOnCameraSwitchError(co.fitcom.fancywebrtc.FancyWebRTC param_0, java.lang.String param_1)  {
		java.lang.Object[] args = new java.lang.Object[2];
		args[0] = param_0;
		args[1] = param_1;
		com.tns.Runtime.callJSMethod(this, "webRTCClientOnCameraSwitchError", void.class, args);
	}

}
